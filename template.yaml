AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  mfl-scoring
  
  Sample SAM Template for mfl-scoring

Globals:
  Function:
    Timeout: 5

Resources:
  MflScoringFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      Role: !GetAtt MflScoringFunctionIamRole.Arn
      CodeUri: mfl-scoring/
      Handler: bootstrap
      Runtime: provided.al2
      Architectures:
        - arm64
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /mfl-scoring
            Method: GET

  MflScoringFunctionIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: kmsAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - kms:Decrypt
            Resource: "*"
      - PolicyName: ssmAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ssm:GetParameter
            Resource:
            - arn:aws:ssm:us-east-1:287140326780:parameter/MFL_API_KEY

  MflScoringApiKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      KmsKeyId: !GetAtt MflScoringKey.Arn

  MflScoringApiKeySecretResourcePolicy:
    Type: AWS::SecretsManager::ResourcePolicy
    Properties: 
      BlockPublicPolicy: True
      ResourcePolicy:
        Version: '2012-10-17'
        Statement:
        - Resource: "*"
          Action: secretsmanager:*
          Effect: Allow
          Principal:
            AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
        - Resource: "*"
          Action: 
            - secretsmanager:DescribeSecret
            - secretsmanager:Get*
            - secretsmanager:List*
          Effect: Allow
          Principal:
            AWS: !GetAtt MflScoringFunctionIamRole.Arn
      SecretId: !Ref MflScoringApiKeySecret

  MflScoringKey:
    Type: AWS::KMS::Key
    Properties:
      Enabled: True
      EnableKeyRotation: True
      MultiRegion: True
      KeyPolicy:
        Version: "2012-10-17"
        Id: key-default-1
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              AWS: !GetAtt MflScoringFunctionIamRole.Arn
            Action:
              - 'kms:DescribeKey'
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:ReEncrypt*'
              - 'kms:GenerateDataKey'
              - 'kms:GenerateDataKeyWithoutPlaintext'
            Resource: '*'

Outputs:
  MflScoringAPI:
    Description: "API Gateway endpoint URL for Prod environment for First Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/mfl-scoring/"
  MflScoringFunction:
    Description: "Lambda Function ARN"
    Value: !GetAtt MflScoringFunction.Arn
